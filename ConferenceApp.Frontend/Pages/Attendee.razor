@page "/attendee"
@using ConferenceApp.Frontend.Services;
@inject HttpClient Http
<h1>Attendees</h1>
@if (_attendees == null)
{
    <h3>Loading Attendees... </h3>
}
else
{

    <table class="table">
        <thead>
            <tr>
                <th>FirstName</th>
                <th>lastName</th>
                <th>UserName</th>
                <th>EmailAddress</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var attendee in _attendees)
            {
                <tr>
                    <td>@attendee.FirstName</td>
                    <td>@attendee.LastName</td>
                    <td>@attendee.UserName</td>
                    <td>@attendee.EmailAddress</td>
                </tr>
            }
        </tbody>
    </table>
}
<h1>Speakers</h1>
@if (_speakers == null)
{
    <h3>Loading ... </h3>
}
else
{

    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Bio</th>
                <th>Website</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var speaker in _speakers)
            {
                <tr>
                    <td>@speaker.Name</td>
                    <td>@speaker.Bio</td>
                    <td>@speaker.Website</td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    public IEnumerable<Domain.Speaker> _speakers;
    public IEnumerable<Domain.Attendee> _attendees;
    public async Task Create()
    {

    }
    protected override async Task OnInitializedAsync()
    {
        var service = new Service(Http);
        _attendees = await service.GetList<Domain.Attendee>(typeof(Domain.Attendee));
        _speakers = await service.GetList<Domain.Speaker>(typeof(Domain.Speaker));
    }
}